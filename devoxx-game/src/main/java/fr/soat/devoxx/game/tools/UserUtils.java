package fr.soat.devoxx.game.tools;import java.util.List;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.session.SessionInformation;import org.springframework.security.core.session.SessionRegistry;import fr.soat.devoxx.game.model.DevoxxUser;//TODO en cours de testpublic enum UserUtils {    INSTANCE;    private static Logger LOGGER = LoggerFactory.getLogger(UserUtils.class);        @Autowired    private SessionRegistry sessionRegistry;    private UserUtils() {    }    public void invalidateUserSessions(DevoxxUser user) {        // invalidate user session        List<Object> loggedUsers = sessionRegistry.getAllPrincipals();        for (Object principal : loggedUsers) {            if (principal instanceof DevoxxUser) {                final DevoxxUser loggedUser = (DevoxxUser) principal;                if (user.getUsername().equals(loggedUser.getUsername()) && !user.getUserRoles().equals(loggedUser.getUserRoles())) {                    List<SessionInformation> sessionsInfo = sessionRegistry.getAllSessions(principal, false);                    if (null != sessionsInfo && sessionsInfo.size() > 0) {                        for (SessionInformation sessionInformation : sessionsInfo) {                            // TODO ne d√©loggue pas le User, voir pourquoi...                            LOGGER.info("Exprire now :" + sessionInformation.getSessionId());                            sessionInformation.expireNow(); // force re-logging                            sessionRegistry.removeSessionInformation(sessionInformation.getSessionId());                        }                    }                }            }        }    }}